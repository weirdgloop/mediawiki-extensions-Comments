{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACO,MAAMA,eAAe,GAAKC,EAAE,IAAM;EACxC,MAAMC,IAAI,GAAGD,EAAE,CAACE,qBAAqB,CAAC,CAAC;EAEvC,OACCD,IAAI,CAACE,GAAG,IAAI,CAAC,IACbF,IAAI,CAACG,IAAI,IAAI,CAAC,IACdH,IAAI,CAACI,MAAM,KAAMC,MAAM,CAACC,WAAW,IAAIC,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAE,IAC9ET,IAAI,CAACU,KAAK,KAAML,MAAM,CAACM,UAAU,IAAIJ,QAAQ,CAACC,eAAe,CAACI,WAAW,CAAE;AAE7E,CAAC;;;;;;UCbD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNa;;AAE4B;AAEzC,IAAIC,UAAU,GAAG,KAAK;EACrBC,UAAU;EACVC,oBAAoB;EACpBC,YAAY;;AAEb;AACA;AACA;AACA;AACA,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAClBC,OAAO,CAACC,GAAG,CAAE,sBAAuB,CAAC;AACtC,CAAC;;AAED;AACA;AACA;AACA,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EACpCL,oBAAoB,GAAGM,CAAC,CAAE,OAAQ,CAAC,CAACC,IAAI,CAAE,IAAI,EAAE,yBAA0B,CAAC;EAC3EN,YAAY,GAAGK,CAAC,CAAE,OAAQ,CAAC,CAACC,IAAI,CAAE,IAAI,EAAE,kBAAmB,CAAC;EAE5DR,UAAU,GAAGO,CAAC,CAAE,OAAQ,CAAC,CACvBC,IAAI,CAAE,IAAI,EAAE,uBAAwB,CAAC,CACrCC,MAAM,CACNF,CAAC,CAAE,MAAO,CAAC,CAACG,IAAI,CAAEC,EAAE,CAACC,OAAO,CAAE,2BAA4B,CAAC,CAACF,IAAI,CAAC,CAAE,CAAC,EACpET,oBAAoB,EACpBC,YACD,CAAC;EAEFK,CAAC,CAAE,cAAe,CAAC,CAACE,MAAM,CAAET,UAAW,CAAC;AACzC,CAAC;AAEDO,CAAC,CAAE,MAAMD,sBAAsB,CAAC,CAAE,CAAC;AAEnCC,CAAC,CAAEhB,MAAO,CAAC,CAACsB,EAAE,CAAE,qCAAqC,EAAE,MAAO;EAC7D,IAAK7B,sDAAe,CAAEgB,UAAW,CAAC,IAAI,CAACD,UAAU,EAAG;IACnDA,UAAU,GAAG,IAAI;IACjBI,IAAI,CAAC,CAAC;EACP;AACD,CAAE,CAAC,C","sources":["/w/extensions/Comments/./src/frontend/util.js","/w/extensions/Comments/webpack/bootstrap","/w/extensions/Comments/webpack/runtime/define property getters","/w/extensions/Comments/webpack/runtime/hasOwnProperty shorthand","/w/extensions/Comments/webpack/runtime/make namespace object","/w/extensions/Comments/./src/frontend/index.js"],"sourcesContent":["/**\n * @param {HTMLElement} el\n * @returns {boolean}\n */\nexport const isElementInView = ( el ) => {\n\tconst rect = el.getBoundingClientRect();\n\n\treturn (\n\t\trect.top >= 0 &&\n\t\trect.left >= 0 &&\n\t\trect.bottom <= ( window.innerHeight || document.documentElement.clientHeight ) &&\n\t\trect.right <= ( window.innerWidth || document.documentElement.clientWidth )\n\t);\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","'use strict';\n\nimport { isElementInView } from './util';\n\nlet HAS_INITED = false,\n\t$container,\n\t$addCommentContainer,\n\t$commentTree;\n\n/**\n * Initialise the frontend for the comments extension. We do not initialise until the container is in the viewport,\n * to prevent unnecessary API calls for all page views.\n */\nconst init = () => {\n\tconsole.log( 'Initialised Comments' );\n};\n\n/**\n * Build the comment container and add it to the DOM\n */\nconst buildCommentsContainer = () => {\n\t$addCommentContainer = $( '<div>' ).attr( 'id', 'mw-comments-add-comment' );\n\t$commentTree = $( '<div>' ).attr( 'id', 'mw-comments-tree' );\n\n\t$container = $( '<div>' )\n\t\t.attr( 'id', 'mw-comments-container' )\n\t\t.append(\n\t\t\t$( '<h3>' ).text( mw.message( 'comments-container-header' ).text() ),\n\t\t\t$addCommentContainer,\n\t\t\t$commentTree\n\t\t);\n\n\t$( '#bodyContent' ).append( $container );\n};\n\n$( () => buildCommentsContainer() );\n\n$( window ).on( 'DOMContentLoaded load resize scroll', ( ) => {\n\tif ( isElementInView( $container ) && !HAS_INITED ) {\n\t\tHAS_INITED = true;\n\t\tinit();\n\t}\n} );\n"],"names":["isElementInView","el","rect","getBoundingClientRect","top","left","bottom","window","innerHeight","document","documentElement","clientHeight","right","innerWidth","clientWidth","HAS_INITED","$container","$addCommentContainer","$commentTree","init","console","log","buildCommentsContainer","$","attr","append","text","mw","message","on"],"sourceRoot":""}